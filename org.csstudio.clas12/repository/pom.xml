<?xml version="1.0" encoding="UTF-8"?>
<!--
Builds SNS products, place in local repo
-->
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.csstudio</groupId>
    <artifactId>sns</artifactId>
    <version>BUILD-VERSION</version>
  </parent>

  <groupId>org.csstudio</groupId>
  <artifactId>sns-repository</artifactId>
  <version>4.0.0-SNAPSHOT</version>
  <packaging>eclipse-repository</packaging>

  <build>
    <plugins>
      <!-- Icons are in .../plugins/org.csstudio.basic.epics.product/icons,
           but tycho wants them in .../repository/target/products/org.csstudio.basic.epics.product.product/org.csstudio.basic.epics.product/icons
           https://gist.github.com/briandealwis/907654 suggested an antrun copy
       -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <configuration>
              <failOnError>true</failOnError>
              <target>
                <echo message="Copying icons into tycho target directory ${project.build.directory}" />
                <copy verbose="false"
                  todir="${project.build.directory}/products/org.csstudio.basic.epics.product.product">
                  <fileset dir="${project.build.directory}/../../plugins">
                    <include name="org.csstudio.basic.epics.product/icons/**" />
                  </fileset>
                </copy>
                <copy
                  todir="${project.build.directory}/products/org.csstudio.sns.product.product">
                  <fileset dir="${project.build.directory}/../../plugins">
                    <include name="org.csstudio.sns.product/icons/**" />
                  </fileset>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-director-plugin</artifactId>
        <version>${tycho.version}</version>
        <configuration>
          <!-- Will build a product for every *.product file found,
               but details of generated files are configured in there.
            -->
          <products>
            <product>
              <!-- 'uid' in the *.product -->
              <id>archive-engine</id>
              <!-- Add version number to product top directory and zipped product -->
              <rootFolder>archive-engine-${sns.version}</rootFolder>
              <archiveFileName>archive-engine-${sns.version}</archiveFileName>
              <!-- When creating ZIP archive for more than one product, need 'attachId'  -->
              <attachId>archive-engine</attachId>
            </product>
            <product>
              <id>archive-config</id>
              <rootFolder>archive-config-${sns.version}</rootFolder>
              <archiveFileName>archive-config-${sns.version}</archiveFileName>
              <attachId>archive-config</attachId>
            </product>
            <product>
              <id>alarm-config</id>
              <rootFolder>alarm-config-${sns.version}</rootFolder>
              <archiveFileName>alarm-config-${sns.version}</archiveFileName>
              <attachId>alarm-config</attachId>
            </product>
            <product>
              <id>alarm-server</id>
              <rootFolder>alarm-server-${sns.version}</rootFolder>
              <archiveFileName>alarm-server-${sns.version}</archiveFileName>
              <attachId>alarm-server</attachId>
            </product>
            <product>
              <id>alarm-notifier</id>
              <rootFolder>alarm-notifier-${sns.version}</rootFolder>
              <archiveFileName>alarm-notifier-${sns.version}</archiveFileName>
              <attachId>alarm-notifier</attachId>
            </product>
            <product>
              <id>jms2rdb</id>
              <rootFolder>jms2rdb-${sns.version}</rootFolder>
              <archiveFileName>jms2rdb-${sns.version}</archiveFileName>
              <attachId>jms2rdb</attachId>
            </product>
            <product>
              <id>scan-server</id>
              <rootFolder>scan-server-${sns.version}</rootFolder>
              <archiveFileName>scan-server-${sns.version}</archiveFileName>
              <attachId>scan-server</attachId>
            </product>
            <product>
              <id>org.csstudio.basic.epics.product.product</id>
              <rootFolder>basic-epics-${sns.version}</rootFolder>
              <archiveFileName>basic-epics-${sns.version}</archiveFileName>
              <attachId>basic</attachId>
            </product>
            <product>
              <id>org.csstudio.sns.product.product</id>
              <rootFolder>sns-css-${sns.version}</rootFolder>
              <archiveFileName>sns-css-${sns.version}</archiveFileName>
              <attachId>sns</attachId>
            </product>
          </products>
        </configuration>
        <executions>
          <!-- Create products listed above.
               In addition, features listed in category.xml
               turn into installable features.
            -->
          <execution>
            <id>materialize-products</id>
            <goals>
              <goal>materialize-products</goal>
            </goals>
          </execution>
          <!-- Zip the products -->
          <execution>
            <id>archive-products</id>
            <goals>
              <goal>archive-products</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-repository-plugin</artifactId>
        <version>${tycho.version}</version>
        <configuration>
          <includeAllDependencies>true</includeAllDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <!-- As a result of the director plugin run configured above,
       products will be generated under
           cs-studio-SNS/repository/target/products/*,
       and a P2 repo for installing additional features under
           cs-studio-SNS/repository/target/repository.

       If a local repository is specified, mirror the build repository
       to that local repository
    -->
  <profiles>
    <profile>
      <id>csstudio-local-repo-mirror</id>
      <activation>
        <property>
          <name>csstudio.local.repo</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.tycho.extras</groupId>
            <artifactId>tycho-p2-extras-plugin</artifactId>
            <version>${tycho.version}</version>
            <executions>
              <execution>
                <id>mirror-build-to-local-repository</id>
                <phase>package</phase>
                <goals>
                    <goal>mirror</goal>
                </goals>
                <configuration>
                  <!-- Details: https://www.eclipse.org/tycho/sitedocs-extras/tycho-p2-extras-plugin/mirror-mojo.html -->
                  <source>
                    <repository>
                      <url>${project.baseUri}/target/repository</url>
                      <layout>p2</layout>
                    </repository>
                  </source>
                  <append>true</append>
                  <compress>true</compress>
                  <mirrorMetadataOnly>false</mirrorMetadataOnly>
                  <destination>${csstudio.local.repo}</destination>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eclipse.tycho</groupId>
            <artifactId>tycho-p2-repository-plugin</artifactId>
            <version>${tycho.version}</version>
            <configuration>
              <includeAllDependencies>true</includeAllDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
